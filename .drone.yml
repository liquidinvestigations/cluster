kind: pipeline
name: test-syntax

steps:
- name: flake8
  image: alpine/flake8:6.0.0
  commands:
  - flake8

---
kind: pipeline
name: publish to docker hub

trigger:
  status:
  - success
  event:
  - push
  - tag
  - cron

depends_on:
- test-syntax

steps:
- name: docker push branch ${DRONE_COMMIT_BRANCH}
  image: liquidinvestigations/drone-docker-buildx:2023-09-25
  privileged: true
  settings:
    force_tag: true
    repo: liquidinvestigations/cluster
    tags: ${DRONE_COMMIT_BRANCH}
    platforms:
      - linux/amd64
      - linux/arm64
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
  when:
    event:
    - push
    - cron
  depends_on:
    - clone

- name: docker push autotag + latest
  image: liquidinvestigations/drone-docker-buildx:2023-09-25
  privileged: true
  settings:
    force_tag: true
    repo: liquidinvestigations/cluster
    auto_tag: true
    platforms:
      - linux/amd64
      - linux/arm64
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
  depends_on:
    - clone

---

kind: pipeline
name: TEST - docker-compose
concurrency:
  limit: 1

depends_on:
- publish to docker hub

trigger:
  status:
  - success
  event:
  - push
  - cron

steps:
- name: test
  image: docker/compose:1.29.2
  volumes:
  - name: docker_sock_temp
    path: /var/run
  commands:
  - apk add bash
  - until docker version; do sleep 1; done
  - cp examples/cluster.ini .
  - "__ALLOW_ROOT=TRUE bash ./bin/docker.sh --rm --no-nohang --image liquidinvestigations/cluster:${DRONE_COMMIT_BRANCH}"
  - "docker logs -f cluster &"
  - "docker exec cluster ./cluster.py wait"

services:
- name: docker
  image: docker:dind
  privileged: true
  volumes:
  - name: docker_sock_temp
    path: /var/run

volumes:
- name: docker_sock_temp
  temp: {}

---
kind: secret
name: docker_username
get:
  path: liquid/ci/drone.docker
  name: username

---
kind: secret
name: docker_password
get:
  path: liquid/ci/drone.docker
  name: password

