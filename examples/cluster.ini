[network]
# Address on which services are bound. You can expect ports 4646 for Nomad,
# 8500 for Consul and 8200 for Vault to appear on this address.
# If you enable "forward = 80,443" below,
address = 10.66.60.1

# Name of network interface to use for Nomad-run containers.
# If this already exists, it should have the IP address listed above.
# Also remember to disable the "create_bridge" flag below.
interface = liquid-bridge

# Create the above interface as a local bridge, using the iproute2 "ip link".
# This will also set it up with the IPv4 address specified in "address".
create_bridge = true

# Use iptables DNAT entries to forward EXTENRAL:LOCAL port pairs.
# Leave blank for no port forwarding.
forward_ports = 80:80,443:443

[nomad]
; version = 0.9.0

# Time until dead jobs are no longer displayed in the UI.
; zombie_time = 4h

# Drain node on "./cluster.py stop" and "docker stop".
# When restarting the node, if the data has not been deleted,
# the services will re-appear.
# Set this to `false` to attempt zero-downtime upgrades.
; drain_on_stop = false

# Delete var/nomad (allocations, images and past jobs) on boot.
# Enable this if Nomad boots up stray jobs after
# an upgrade. Having this enabled means you need to start all jobs
# on every restart.
; delete_data_on_start = true

# User-defined flags for this nomad node
; [nomad_meta]
; storage = true
; meaning_of_life = happiness


[vault]
; version = 1.1.1

# If vault complains with `Failed to lock memory`, either allow the vault
# binary to call mlock (`sudo setcap cap_ipc_lock=+ep bin/vault`), or
# disable mlock after reading
# https://www.vaultproject.io/docs/configuration/#disable_mlock
disable_mlock = false


[consul]
; version = 1.4.4
;

[cluster]
# Run daemons in -dev mode
dev = false
# Set the log level to DEBUG
debug = false
# Comma-separated list of jobs to disable from templates/*.nomad
disable = alertmanager

# Multi-host configuration
; bootstrap_expect = 3
; retry_join = 10.66.60.1,10.66.60.2,10.66.60.4

# Override health check timeouts, intervals and counts
; [deploy]
; wait_max_sec = 240
; wait_interval = 3
; wait_green_count = 3
